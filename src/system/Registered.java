/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package system;
import java.awt.Color;
import java.awt.Toolkit;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.sql.*;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import net.proteanit.sql.DbUtils;


public class Registered extends javax.swing.JFrame {

   int xMouse;
   int yMouse;
    public Registered() {
        initComponents();
       
       getStudentsList();
       setStatusNotVisible();
       setRegSettingNotShow();
       setIconImage(Toolkit.getDefaultToolkit().createImage("icon/icon.png"));
       setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
       addWindowListener(new WindowAdapter() {
                        @Override
			public void windowClosing(WindowEvent e) {
                            int choice = JOptionPane.showConfirmDialog(
					null, 
					"Are you sure you want to exit?", 
					"CONFIRM", 
					JOptionPane.YES_NO_OPTION
				);
				if (choice == JOptionPane.YES_OPTION) { //yes
					System.exit(0);
				}
				
			}
		});
       
    }
    
    public void getStudentsList(){
    
    Connection con = Sqlconnection.connectDB();
    Statement st;
    ResultSet rs;
    String query = "SELECT ID,fname,lname,address FROM register";
    try{
        st = con.createStatement();
        rs = st.executeQuery(query);
        while(rs.next()){
            DefaultTableModel model = (DefaultTableModel) table.getModel();
            model.addRow(new Object[]{rs.getInt("ID"),rs.getString("fname"),rs.getString("lname"),rs.getString("address")});
            
        }
    }catch(Exception e){
        System.out.println(e.getMessage());
    }  
}
     
     public void setStatusNotVisible(){
         payst.setText("      ");
         rqst.setText("        ");
     }
     public void setStatusVisible(){
         paylbl.setVisible(true);
         payst.setVisible(true);
         rqlbl.setVisible(true);
         rqst.setVisible(true);
     }
     public void setRegSettingShow(){
         profile.setEnabled(true);
         update.setEnabled(true);
         remove.setEnabled(true);
         btm.setEnabled(true);
     }
     public void setRegSettingNotShow(){
         profile.setEnabled(false);
         update.setEnabled(false);
         remove.setEnabled(false);
         
     }
     public JTable getTable(){
         return table;
     }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel7 = new javax.swing.JPanel();
        jLabel55 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        searchfield = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        profile = new javax.swing.JButton();
        update = new javax.swing.JButton();
        remove = new javax.swing.JButton();
        paylbl = new javax.swing.JLabel();
        payst = new javax.swing.JLabel();
        rqlbl = new javax.swing.JLabel();
        rqst = new javax.swing.JLabel();
        btm = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel7.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jPanel7MouseDragged(evt);
            }
        });
        jPanel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanel7MousePressed(evt);
            }
        });

        jLabel55.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel55.setText("Enrollment System");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(397, Short.MAX_VALUE)
                .addComponent(jLabel55, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(306, 306, 306))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addComponent(jLabel55, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );

        searchfield.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        searchfield.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchfieldMouseClicked(evt);
            }
        });
        searchfield.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchfieldKeyReleased(evt);
            }
        });

        table.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        table.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Priority #", "Firstname", "Lastname", "Address"
            }
        ));
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table);
        if (table.getColumnModel().getColumnCount() > 0) {
            table.getColumnModel().getColumn(0).setMinWidth(80);
            table.getColumnModel().getColumn(0).setPreferredWidth(80);
            table.getColumnModel().getColumn(0).setMaxWidth(80);
        }

        profile.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        profile.setText("Profile");
        profile.setEnabled(false);
        profile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                profileActionPerformed(evt);
            }
        });

        update.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        update.setText("Edit Profile");
        update.setEnabled(false);
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        remove.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        remove.setText("Remove");
        remove.setEnabled(false);
        remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeActionPerformed(evt);
            }
        });

        paylbl.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        paylbl.setText("Payment:");

        payst.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        payst.setText("status");

        rqlbl.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        rqlbl.setText("Requirements: ");

        rqst.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        rqst.setText("status");

        btm.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btm.setText("Back to main");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Refresh");
        jLabel1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel1MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel1MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLabel1MouseReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(searchfield, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(81, 81, 81)
                        .addComponent(jLabel1)
                        .addGap(60, 60, 60)
                        .addComponent(btm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 658, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(profile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(update, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(remove, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rqlbl)
                            .addComponent(paylbl))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rqst, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                            .addComponent(payst, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btm)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(paylbl)
                            .addComponent(payst, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rqlbl)
                            .addComponent(rqst))
                        .addGap(18, 18, 18)
                        .addComponent(profile)
                        .addGap(18, 18, 18)
                        .addComponent(update)
                        .addGap(18, 18, 18)
                        .addComponent(remove)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 464, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jPanel7MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel7MouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();

        this.setLocation(x - xMouse , y - yMouse);
    }//GEN-LAST:event_jPanel7MouseDragged

    private void jPanel7MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel7MousePressed
        xMouse = evt.getX();
        yMouse = evt.getY();
    }//GEN-LAST:event_jPanel7MousePressed

    private void searchfieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchfieldKeyReleased
        table.getSelectionModel().clearSelection();
        PreparedStatement pst;
        ResultSet rs;
        try{
            if(table.getSelectedRow()==-1){
                setStatusNotVisible();
                setRegSettingNotShow();
            }
            String query ="SELECT ID,fname,lname,address FROM register WHERE CONCAT(ID,fname,lname) LIKE '%"+searchfield.getText()+"%'";
            Connection con = Sqlconnection.connectDB();
            pst = con.prepareStatement(query);
            rs = pst.executeQuery();
            table.setModel(DbUtils.resultSetToTableModel(rs));
            while(rs.next()){
               
            }
            pst.close();
        }catch(Exception e){
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_searchfieldKeyReleased

    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked
        Statement st;
        ResultSet rs;
        try{
            int sel = table.getSelectedRow();
            TableModel model = table.getModel();
            if(sel == -1){
                setStatusNotVisible();
                setRegSettingNotShow();
            }else{
                setStatusVisible();
                setRegSettingShow();
                Connection con = Sqlconnection.connectDB();
                String id = model.getValueAt(sel,0).toString();
                String query = "SELECT payment,requirement FROM register WHERE ID='"+id+"'";
                st = con.createStatement();
                rs = st.executeQuery(query);
                while(rs.next()){
                    if(rs.getString("payment") == null){
                    payst.setText("Unpaid");
                    payst.setForeground(Color.red);
                }
                    else{
                    payst.setText("Paid");
                    payst.setForeground(Color.blue);
                }
                    if(rs.getString("requirement") == null){
                    rqst.setText("Incomplete");
                    rqst.setForeground(Color.red);
                }else{
                    rqst.setText("Completed");
                    rqst.setForeground(Color.blue);
                }
                }
            }
        }catch(Exception e){
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_tableMouseClicked

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_updateActionPerformed

    private void profileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_profileActionPerformed
        int sel = table.getSelectedRow();
        TableModel model = table.getModel();
        String ID =   model.getValueAt(sel,0).toString();
        String name = model.getValueAt(sel,1).toString();
        String last = model.getValueAt(sel,2).toString();
        Statement st;
        ResultSet rs;
        String query = "SELECT * FROM register WHERE ID = '"+ID+"' AND fname='"+name+"' AND lname='"+last+"'";
        try{
            Connection con = Sqlconnection.connectDB();
            st = con.createStatement();
            rs = st.executeQuery(query);
            while(rs.next()){
                Profile pf = new Profile();
                if(rs.getString("payment")==null){
                    pf.getPaybox().setSelected(false);
                    
                }else{
                    pf.getPaybox().setSelected(true);
                   
                }
                if(rs.getString("requirement")==null){
                    pf.getRqbox().setSelected(false);
                    
                }else{
                    pf.getRqbox().setSelected(true);
                    
                }
                
                pf.setVisible(true);
                pf.setLocationRelativeTo(null);
                pf.getID().setText(ID);
                pf.profArea().setEditable(false);
                pf.profArea().append("PROFILE\n\n" + "Firstname:\t\t" + rs.getString("fname") + 
                        "\nMiddlename:\t\t"+rs.getString("mname")+"\nLastname:\t\t"+rs.getString("lname")+
                        "\nDate of Birth:\t\t"+rs.getString("dob")+"\nAge:\t\t"+rs.getString("age")+
                        "\nGender:\t\t"+rs.getString("gender")+"\nStatus:\t\t"+rs.getString("status")+"\nHeight:\t\t"+rs.getInt("height")+
                        "\nWeight:\t\t"+rs.getInt("weight")+"\nBlood Type:\t\t"+rs.getString("btype")+"\nAddress:\t\t"
                        +rs.getString("address")+"\nCitizenship:\t\t"+rs.getString("cship")+"\nCell Number:\t\t"
                        +rs.getInt("cnumber")+"\n\nFAMILY" + "\n\nFather:" + "\n\nFirstname:\t\t"+rs.getString("ffname")+
                        "\nMiddlename:\t\t"+rs.getString("fmname")+"\nLastname:\t\t"+rs.getString("flname")+
                        "\nOccupation:\t\t"+rs.getString("foccupation")+
                        "\n\nMother:" + "\n\nFirstname:\t\t"+rs.getString("mfname")+
                        "\nMiddlename:\t\t"+rs.getString("mmname")+"\nLastname:\t\t"+rs.getString("mlname")+
                        "\nOccupation:\t\t"+rs.getString("moccupation")+"\nSibling:\t\t"+rs.getInt("psibling")+"\n\n"
                        
                        
                        );
            }
            
        } catch (Exception ex) {
           System.out.println(ex.getMessage());
       }
        this.setVisible(false);
    }//GEN-LAST:event_profileActionPerformed

    private void searchfieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchfieldMouseClicked
        
    }//GEN-LAST:event_searchfieldMouseClicked

    private void removeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeActionPerformed
        if(JOptionPane.showConfirmDialog(null,"Are you sure you want to remove data from table?","Confirmation",JOptionPane.YES_NO_OPTION)==JOptionPane.YES_NO_OPTION){
            
        int n = table.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        String id = model.getValueAt(n,0).toString();
        Statement st;
        ResultSet rs;
        String query = "DELETE FROM register WHERE ID='"+id+"'";
        try{
            Connection con = Sqlconnection.connectDB();
            st = con.createStatement();
            
            if(st.executeUpdate(query)==1){
                JOptionPane.showMessageDialog(null,"Date successfully deleted");
                model.setRowCount(0);
                getStudentsList();
                
                
                
            }
            
            
        }catch(Exception e){
            System.out.println(e.getMessage());
        }
        }
        
    }//GEN-LAST:event_removeActionPerformed

    private void jLabel1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseEntered
        jLabel1.setForeground(Color.blue);
    }//GEN-LAST:event_jLabel1MouseEntered

    private void jLabel1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseExited
        jLabel1.setForeground(UIManager.getColor("control"));
    }//GEN-LAST:event_jLabel1MouseExited

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        
        Statement st;
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        try{
            
            String query = "INSERT INTO evaluation (ID,fname,mname,lname,age,gender,status,height,weight,btype,dob,address,cship,cnumber,ffname,fmname,flname,foccupation,mfname,mmname,mlname,moccupation,psibling)"
                    + "SELECT ID,fname,mname,lname,age,gender,status,height,weight,btype,dob,address,cship,cnumber,ffname,fmname,flname,foccupation,mfname,mmname,mlname,moccupation,psibling "
                    + "FROM register WHERE payment = 'paid' AND requirement ='completed';"
                    +  "DELETE FROM register WHERE payment ='paid' AND requirement='completed';"
                    + "COMMIT";
            Connection con = Sqlconnection.connectDB();
            st = con.createStatement();
            st.executeUpdate(query);
           
            model.setRowCount(0);
            getStudentsList();
            setRegSettingNotShow();
            setStatusNotVisible();
                
            
        }catch(Exception e){
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_jLabel1MouseClicked

    private void jLabel1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MousePressed
        jLabel1.setForeground(Color.green);
    }//GEN-LAST:event_jLabel1MousePressed

    private void jLabel1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseReleased
        jLabel1.setForeground(Color.blue);
    }//GEN-LAST:event_jLabel1MouseReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Registered.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Registered.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Registered.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Registered.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Registered().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btm;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel paylbl;
    private javax.swing.JLabel payst;
    private javax.swing.JButton profile;
    private javax.swing.JButton remove;
    private javax.swing.JLabel rqlbl;
    private javax.swing.JLabel rqst;
    private javax.swing.JTextField searchfield;
    private javax.swing.JTable table;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables

    
}
